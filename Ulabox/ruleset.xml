<?xml version="1.0"?>
<ruleset name="Ulabox">
    <description>Ulabox coding standard.</description>

    <!-- Disable our custom type hint check (pending review) -->
    <rule ref="Ulabox.Commenting.FunctionComment">
        <exclude name="Ulabox.Commenting.FunctionComment.TypeHintMissing" />
    </rule>

    <!-- Include the whole PSR-1 standard -->
    <rule ref="PSR1"/>
    <!-- Include the whole PSR-2 standard -->
    <rule ref="PSR2"/>
    <!-- Explicit activation of other extra rules -->
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="0" />
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties><property name="ignoreNewlines" value="true" /></properties>
    </rule>

    <!-- We provide our own subclass of PEAR's ClassComment and FunctionComment sniff, but these will do: -->
    <rule ref="PEAR.Commenting.InlineComment"/>

    <!-- Import Zend coding standard (which in turn imports PEAR) -->
    <rule ref="Zend">
        <!-- but exclude their code analyzer -->
        <exclude name="Zend.Debug.CodeAnalyzer"/>
        <!-- covered by Squiz ControlSignature, which enforces try/catch as well -->
        <exclude name="PEAR.ControlStructures.ControlSignature"/>
        <exclude name="Generic.Files.LineLength.TooLong"/>
        <!-- Don't enforce Zend's private member underscores -->
        <exclude name="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
        <!-- Ignore variables that conta ins numbers -->
        <exclude name="Zend.NamingConventions.ValidVariableName.ContainsNumbers"/>
    </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties><property name="allowMultipleArguments" value="false"/></properties>
    </rule>

    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine">
        <severity>0</severity>
    </rule>

    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array" value="sizeof=>count,delete=>unset,eval=>null,system=>null,phpinfo=>null,die=>null,var_dump=>null,print_r=>null,extract=>null"/>
        </properties>
    </rule>
</ruleset>
